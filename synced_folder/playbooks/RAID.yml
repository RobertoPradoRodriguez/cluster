- hosts: head
  become: true
  
  tasks:
    - name: Read variables of 'variables.yml' file
      include_vars:
        file: ../variables.yml
        name: var
    
    - name: Set variables LEVEL and DISKS
      set_fact:
        LEVEL: "{{ var.variables.RAID_LEVEL | default ('', true) }}"
        DISKS: "{{ var.variables.DISKS_HEAD | default ('', true) }}"
        SHAREDPATH: "{{ var.variables.SHARED_PATH | default ('', true) }}"

    - name: Install mdadm
      yum: 
        name: mdadm 
        state: present

    # less than 3 disks
    - name: "< 3 DISKS: Create RAID 1"
      shell: "if [ ! -b /dev/md0 ]; then \
      yes | mdadm --create --verbose /dev/md0 --level=1 \
      --raid-devices=2 `ls /dev/sd[b-c]`; fi"
      when: (DISKS < "3") or (DISKS | trim == '')
    
    # 3 disks
    - block:
      - name: Set variable LEVEL (3 disks)
        set_fact:
          LEVEL: 1
        when:
          - (LEVEL | trim == '') or ((LEVEL != "5") and (LEVEL != "10")) 

      - name: "3 DISKS: Create RAID 1, 5 or 10. Chosen: RAID {{ LEVEL }}"
        shell: "if [ ! -b /dev/md0 ]; then \
        yes | mdadm --create --verbose /dev/md0 --level={{ LEVEL }} \
        --raid-devices=3 `ls /dev/sd[b-d]`; fi"
      when: 
        - DISKS == "3"

    # 4 disks
    - block:
      - name: Set variable LEVEL (4 disks)
        set_fact:
          LEVEL: 1
        when:
          - (LEVEL | trim == '') or ((LEVEL != "5") and (LEVEL != "6") and (LEVEL != "10")) 

      - name: " 4 DISKS: Create RAID 1, 5, 6 or 10. Chosen: RAID {{ LEVEL }}"
        shell: "if [ ! -b /dev/md0 ]; then \
        yes | mdadm --create --verbose /dev/md0 --level={{ LEVEL }} \
        --raid-devices=4 `ls /dev/sd[b-z]`; fi"
      when:
        - DISKS == "4"

    # 5 or more disks
    - block:
      - name: Set variable LEVEL (5 or more disks)
        set_fact:
          LEVEL: 1
        when:
          - (LEVEL | trim == '') or ((LEVEL != "5") and (LEVEL != "6") and (LEVEL != "10")) 

      - name: " 5 or more DISKS: Create RAID 1, 5, 6 or 10 + SPARE DISK. Chosen: RAID {{ LEVEL }}"
        shell: "if [ ! -b /dev/md0 ]; then \
        yes | mdadm --create --verbose /dev/md0 --level={{ LEVEL }} \
        --raid-devices={{ var.variables.DISKS_HEAD - 1 }} \
        `ls /dev/sd[c-z]` --spare-devices=1 /dev/sdb; fi"
      when:
        - DISKS > "4"

    - name: Creates /etc/mdadm.conf for save RAID config
      shell: mdadm --detail --scan > /etc/mdadm.conf

    - name: Create a Volume Group in RAID device
      lvg:
        vg: vg_raid
        pvs: /dev/md0

    ### HOME FOLDER ###
    - name: Creates Logical Volume (/home)
      lvol:
        vg: vg_raid
        lv: lv_home
        size: 50%VG
        pvs: /dev/md0

    - name: Creates filesystem in LV (/home)
      filesystem:
        fstype: xfs
        dev: /dev/mapper/vg_raid-lv_home

    #- name: Save home
    #  copy:
    #    src: /home/vagrant/.ssh
    #    dest: /tmp/
    #    force: yes
    #    directory_mode: yes
      #when: ansible_hostname == "head"

    - name: Mount virtual partition in HOME
      mount:
        src: /dev/mapper/vg_raid-lv_home
        path: /home
        fstype: xfs
        state: mounted 
    
    - name: Creates /home/vagrant (ONLY for ansible purposes)
      file:
        state: directory 
        path: /home/vagrant/
        recurse: yes
        owner: vagrant
        group: vagrant
    
    #- name: Restore home
    #  shell: "cp -r /tmp/.ssh/* /home/vagrant/.ssh/"

    #- name: Restore home (not work!)
    #  copy: 
    #    src: /tmp/.ssh
    #    dest: /home/vagrant/
    #    force: yes
    #    directory_mode: yes
    #  when: ansible_hostname == "head"
    
    #- name: Change permissions
    #  file:
    #    path: /home/vagrant/
    #    owner: vagrant
    #    group: vagrant
    #    mode: '0700'
    #    recurse: yes

    ### SHARED FOLDER ###
    - name: Creates Logical Volumes (shared path)
      lvol:
        vg: vg_raid
        lv: lv_share
        size: 50%VG
        pvs: /dev/md0

    - name: Creates filesystem in LV (shared path)
      filesystem:
        fstype: xfs
        dev: /dev/mapper/vg_raid-lv_share

    - block:
      - name: HEAD - Create {{ SHAREDPATH }} directory to share
        file:
          path: "{{ var.variables.SHARED_PATH }}"
          state: directory

      - name: Mount virtual partition in {{ SHAREDPATH }}
        mount:
          src: /dev/mapper/vg_raid-lv_share
          path: "{{ SHAREDPATH }}"
          fstype: xfs
          state: mounted 
      when: SHAREDPATH | trim != ''

    - block:
      - name: "HEAD - NOT specified: create default /share directory"
        file:
          path: /share
          state: directory    
      
      - name: Mount virtual partition in /share
        mount:
          src: /dev/mapper/vg_raid-lv_share
          path: /share
          fstype: xfs
          state: mounted
      when: SHAREDPATH | trim == ''