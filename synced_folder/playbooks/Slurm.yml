- hosts: all
  become: true
  
  tasks:
    - name: Download OpenHPC repository
      get_url:
        url: 'http://repos.openhpc.community/OpenHPC/2/CentOS_8/x86_64/ohpc-release-2-1.el8.x86_64.rpm'
        dest: /root

    - name: Install package OpenHPC
      package:
        name: /root/ohpc-release-2-1.el8.x86_64.rpm
        state: present
        disable_gpg_check: yes
        update_cache: yes

    - name: HEAD - Install Slurm server
      package:
        name: ohpc-slurm-server.x86_64
        state: present
      when: ansible_hostname == "head"

    - block:
      - name: COMPUTES - Install Slurm client (dependency 1)
        package:
          name: libtool-ltdl
          state: present

      - name: COMPUTES - Install Slurm client (dependency 2 - download)
        get_url:
          url: http://mirror.centos.org/centos/7/os/x86_64/Packages/hwloc-libs-1.11.8-4.el7.x86_64.rpm
          dest: /root

      - name: COMPUTES - Install Slurm client (dependency 2 - install)
        package:
          name: /root/hwloc-libs-1.11.8-4.el7.x86_64.rpm
          state: present
          disable_gpg_check: yes

      - name: COMPUTES - Install Slurm client
        package:
          name: ohpc-slurm-client.x86_64
          state: present
      when: ansible_hostname != "head"

   # - name: HEAD - Creates slurmdbd.conf
   #   shell: "if [ ! -f /etc/slurm/slurmdbd.conf ]; then \
   #   cp /etc/slurm/slurmdbd.conf.example /etc/slurm/slurmdbd.conf; fi"
   #   when: ansible_hostname == "head"

    - name: Creates cgroup.conf (copy)
      copy: 
        src: /synced_folder/slurm/cgroup.conf
        dest: /etc/slurm
      #with_fileglob:
      #  - "/synced_folder/slurm/cgroup.conf"

    - name: Read variables of 'variables.yml' file
      include_vars:
        file: ../variables.yml
        name: var

    - block:
      - name: COMPUTES - Obtain real memory
        shell: 'free -m | grep "Mem:" | cut -d " " -f 13'
        register: MEM

      - name: COMPUTES - Set variables for fill slurm.conf
        set_fact:
          LAST_NODE: "{{ var.variables.NUM_COMPUTE_NODES - 1 }}"
          TOTAL_MEM: "{{ MEM.stdout }}"
          CORES: "{{ var.variables.COMPUTE_NODE_CORES }}"
          MEM_SPEC: 512

      - name: COMPUTES - Adjusting MEM_SPEC
        set_fact:
          MEM_SPEC: 256
        when: TOTAL_MEM | int < 1025

      - name: COMPUTES - Fill slurm.conf template
        template:
          src: /synced_folder/slurm/slurm.conf.j2
          dest: /etc/slurm/slurm.conf
      when: ansible_hostname != "head"

    - name: HEAD - Obtain slurm.conf from compute-0
      shell: 'scp -o "StrictHostKeyChecking no" root@compute-0:/etc/slurm/slurm.conf /etc/slurm/'
      when: ansible_hostname == "head"

    #- name: Fetch slurm.conf
    #  fetch:
    #    src: /etc/slurm/slurm.conf
    #    dest: /etc/slurm/
    #    flat: yes
    #  when: ansible_hostname == "compute-0"

    - name: HEAD - Allow port on firewall 
      firewalld:
        port: 6817/tcp
        permanent: yes
        state: enabled
      when: ansible_hostname == "head"

    - name: COMPUTES - Allow port on firewall 
      firewalld:
        port: 6818/tcp
        permanent: yes
        state: enabled
      when: ansible_hostname != "head"

    - name: Restart firewalld service to apply changes
      systemd:
        name: firewalld
        state: restarted   

  #  - name: Change permissions in /etc/slurm
  #    file:
  #      state: file
  #      path: /etc/slurm/slurmdbd.conf
  #      owner: slurm
  #      group: slurm
  #    when: ansible_hostname == "head"

    #- name: Copy munge key
    #  copy: 
    #    src: /etc/munge/munge.key
    #    dest: /etc/munge

    - name: HEAD - Copy Munge key to all computes
      shell: 'scp -o "StrictHostKeyChecking no" /etc/munge/munge.key root@{{ item }}:/etc/munge/munge.key'
      loop: "{{ groups.computes }}"
      when: ansible_hostname == "head"

    - name: Enable and start Munge service
      systemd:
        name: munge
        enabled: yes
        state: started

  #  - name: HEAD - Enable and start Slurmdbd
  #    systemd:
  #      name: slurmdbd
  #      enabled: yes
  #      state: started
  #    when: ansible_hostname == "head"

    - name: HEAD - Enable and start Slurmctld
      systemd:
        name: slurmctld
        enabled: yes
        state: started
      when: ansible_hostname == "head"

    - name: COMPUTES - Enable and start Slurmd
      systemd:
        name: slurmd
        enabled: yes
        state: started
      when: ansible_hostname != "head"